([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         check_all: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  4 
                  {
                  }) 
               check_all [] [
               ([1m[35mSubroutineCall[39m[0m 1 [33mtest_int[39m () [] ()) 
               ([1m[35mSubroutineCall[39m[0m 1 [33mtest_bool_to_int[39m () [] ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.), 
         test_bool_to_int: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  3 
                  {
                     b: 
                        ([1m[35mVariable[39m[0m 
                           3 
                           b [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               test_bool_to_int [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                        ([1m[35mInteger[39m[0m 4 [])) 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-1[39m 
                        ([1m[35mInteger[39m[0m 4 []))) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Add[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m2[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Add[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Add[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Add[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mIntegerBinOp[39m[0m 
                        ([1m[35mIntegerBinOp[39m[0m 
                           ([1m[35mCast[39m[0m 
                              ([1m[35mLogicalConstant[39m[0m .true. 
                                 ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                              LogicalToInteger[39m[0m 
                              ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                           Add[39m[0m 
                           ([1m[35mCast[39m[0m 
                              ([1m[35mLogicalConstant[39m[0m .true. 
                                 ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                              LogicalToInteger[39m[0m 
                              ([1m[35mInteger[39m[0m 4 []) ()) 
                           ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                        Add[39m[0m 
                        ([1m[35mCast[39m[0m 
                           ([1m[35mLogicalConstant[39m[0m .true. 
                              ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                           LogicalToInteger[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) ()) 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m3[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 3 [33mb[39m) 
                  ([1m[35mIntegerBinOp[39m[0m 
                     ([1m[35mIntegerBinOp[39m[0m 
                        ([1m[35mCast[39m[0m 
                           ([1m[35mLogicalConstant[39m[0m .true. 
                              ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                           LogicalToInteger[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                        Add[39m[0m 
                        ([1m[35mIntegerBinOp[39m[0m 
                           ([1m[35mCast[39m[0m 
                              ([1m[35mLogicalConstant[39m[0m .true. 
                                 ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                              LogicalToInteger[39m[0m 
                              ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                           Add[39m[0m 
                           ([1m[35mCast[39m[0m 
                              ([1m[35mLogicalConstant[39m[0m .true. 
                                 ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                              LogicalToInteger[39m[0m 
                              ([1m[35mInteger[39m[0m 4 []) ()) 
                           ([1m[35mInteger[39m[0m 4 []) ()) 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Sub[39m[0m 
                     ([1m[35mIntegerBinOp[39m[0m 
                        ([1m[35mCast[39m[0m 
                           ([1m[35mLogicalConstant[39m[0m .false. 
                              ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                           LogicalToInteger[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                        Add[39m[0m 
                        ([1m[35mCast[39m[0m 
                           ([1m[35mLogicalConstant[39m[0m .true. 
                              ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                           LogicalToInteger[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) ()) 
                        ([1m[35mInteger[39m[0m 4 []) ()) 
                     ([1m[35mInteger[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 3 [33mb[39m) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m2[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.), 
         test_int: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  2 
                  {
                     f: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           f [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               test_int [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mf[39m) 
                  ([1m[35mRealConstant[39m[0m   5.67799999999999994e+00 
                     ([1m[35mReal[39m[0m 8 [])) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mRealConstant[39m[0m   5.67799999999999994e+00 
                           ([1m[35mReal[39m[0m 8 [])) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mf[39m) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mf[39m) 
                  ([1m[35mRealUnaryMinus[39m[0m 
                     ([1m[35mRealConstant[39m[0m   1.83745230000000010e+05 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mReal[39m[0m 8 []) 
                     ([1m[35mRealConstant[39m[0m  -1.83745230000000010e+05 
                        ([1m[35mReal[39m[0m 8 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mRealUnaryMinus[39m[0m 
                           ([1m[35mRealConstant[39m[0m   1.83745230000000010e+05 
                              ([1m[35mReal[39m[0m 8 [])) 
                           ([1m[35mReal[39m[0m 8 []) 
                           ([1m[35mRealConstant[39m[0m  -1.83745230000000010e+05 
                              ([1m[35mReal[39m[0m 8 []))) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-183745[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m183745[39m 
                        ([1m[35mInteger[39m[0m 4 [])) 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-183745[39m 
                        ([1m[35mInteger[39m[0m 4 []))) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mf[39m) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m183745[39m 
                        ([1m[35mInteger[39m[0m 4 [])) 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-183745[39m 
                        ([1m[35mInteger[39m[0m 4 []))) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mRealConstant[39m[0m   5.50000000000000000e+00 
                           ([1m[35mReal[39m[0m 8 [])) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mRealUnaryMinus[39m[0m 
                           ([1m[35mRealConstant[39m[0m   5.50000000000000000e+00 
                              ([1m[35mReal[39m[0m 8 [])) 
                           ([1m[35mReal[39m[0m 8 []) 
                           ([1m[35mRealConstant[39m[0m  -5.50000000000000000e+00 
                              ([1m[35mReal[39m[0m 8 []))) [1m[32m
                        RealToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-5[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m5[39m 
                        ([1m[35mInteger[39m[0m 4 [])) 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-5[39m 
                        ([1m[35mInteger[39m[0m 4 []))) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToInteger[39m[0m 
                        ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                        ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                     Eq[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.)
      }) 
   [
   ([1m[35mSubroutineCall[39m[0m 1 [33mcheck_all[39m () [] ())])
(TranslationUnit (SymbolTable 1 {_lpython_main_program: (Subroutine (SymbolTable 6 {}) _lpython_main_program [] [(SubroutineCall 1 check_all () [] ())] Source Public Implementation () .false. .false.), check_all: (Subroutine (SymbolTable 4 {}) check_all [] [(SubroutineCall 1 test_int () [] ()) (SubroutineCall 1 test_bool_to_int () [] ())] Source Public Implementation () .false. .false.), main_program: (Program (SymbolTable 5 {}) main_program [] [(SubroutineCall 1 _lpython_main_program () [] ())]), test_bool_to_int: (Subroutine (SymbolTable 3 {b: (Variable 3 b Local () () Default (Integer 4 []) Source Public Required .false.)}) test_bool_to_int [] [(= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 0 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 0 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerUnaryMinus (IntegerConstant 1 (Integer 4 [])) (Integer 4 []) (IntegerConstant -1 (Integer 4 []))) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Sub (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 1 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 2 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 0 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 1 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 1 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (IntegerBinOp (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) Sub (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 3 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 3 b) (IntegerBinOp (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (IntegerBinOp (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) (Integer 4 []) ()) Sub (IntegerBinOp (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) Add (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) ()) (Integer 4 []) ()) (Integer 4 []) ()) ()) (Assert (IntegerCompare (Var 3 b) Eq (IntegerConstant 2 (Integer 4 [])) (Logical 4 []) ()) ())] Source Public Implementation () .false. .false.), test_int: (Subroutine (SymbolTable 2 {f: (Variable 2 f Local () () Default (Real 8 []) Source Public Required .false.)}) test_int [] [(= (Var 2 f) (RealConstant   5.67799999999999994e+00 (Real 8 [])) ()) (Assert (IntegerCompare (IntegerConstant 0 (Integer 4 [])) Eq (IntegerConstant 0 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (RealConstant   5.67799999999999994e+00 (Real 8 [])) RealToInteger (Integer 4 []) (IntegerConstant 5 (Integer 4 []))) Eq (IntegerConstant 5 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (Var 2 f) RealToInteger (Integer 4 []) ()) Eq (IntegerConstant 5 (Integer 4 [])) (Logical 4 []) ()) ()) (= (Var 2 f) (RealUnaryMinus (RealConstant   1.83745230000000010e+05 (Real 8 [])) (Real 8 []) (RealConstant  -1.83745230000000010e+05 (Real 8 []))) ()) (Assert (IntegerCompare (Cast (RealUnaryMinus (RealConstant   1.83745230000000010e+05 (Real 8 [])) (Real 8 []) (RealConstant  -1.83745230000000010e+05 (Real 8 []))) RealToInteger (Integer 4 []) (IntegerConstant -183745 (Integer 4 []))) Eq (IntegerUnaryMinus (IntegerConstant 183745 (Integer 4 [])) (Integer 4 []) (IntegerConstant -183745 (Integer 4 []))) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (Var 2 f) RealToInteger (Integer 4 []) ()) Eq (IntegerUnaryMinus (IntegerConstant 183745 (Integer 4 [])) (Integer 4 []) (IntegerConstant -183745 (Integer 4 []))) (Logical 4 []) ()) ()) (Assert (IntegerCompare (Cast (RealConstant   5.50000000000000000e+00 (Real 8 [])) RealToInteger (Integer 4 []) (IntegerConstant 5 (Integer 4 []))) Eq (IntegerConstant 5 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (RealUnaryMinus (RealConstant   5.50000000000000000e+00 (Real 8 [])) (Real 8 []) (RealConstant  -5.50000000000000000e+00 (Real 8 []))) RealToInteger (Integer 4 []) (IntegerConstant -5 (Integer 4 []))) Eq (IntegerUnaryMinus (IntegerConstant 5 (Integer 4 [])) (Integer 4 []) (IntegerConstant -5 (Integer 4 []))) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToInteger (Integer 4 []) (IntegerConstant 1 (Integer 4 []))) Eq (IntegerConstant 1 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (IntegerCompare (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToInteger (Integer 4 []) (IntegerConstant 0 (Integer 4 []))) Eq (IntegerConstant 0 (Integer 4 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ())] Source Public Implementation () .false. .false.)}) [])
