([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         test_pass: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  2 
                  {
                     a: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           a [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               test_pass [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) ([1m[35mIntegerConstant[39m[0m [36m1[39m 
                  ([1m[35mInteger[39m[0m 4 [])) ()) 
               ([1m[35mWhileLoop[39m[0m 
                  ([1m[35mIntegerCompare[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     Gt[39m[0m ([1m[35mIntegerConstant[39m[0m [36m0[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) [])] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.)
      }) 
   [])
#include <iostream>
#include <string>
#include <vector>
#include <cassert>
#include <cmath>
#include <complex>
#include <Kokkos_Core.hpp>
#include <lfortran_intrinsics.h>

template <typename T>
Kokkos::View<T*> from_std_vector(const std::vector<T> &v)
{
    Kokkos::View<T*> r("r", v.size());
    for (size_t i=0; i < v.size(); i++) {
        r(i) = v[i];
    }
    return r;
}

// Forward declarations
void test_pass();
namespace {
}

// Implementations
void test_pass()
{
    int a;
    a = 1;
    while (a > 0) {
    }
}

namespace {

void main2() {
}

}
int main(int argc, char* argv[])
{
    Kokkos::initialize(argc, argv);
    main2();
    Kokkos::finalize();
    return 0;
}
