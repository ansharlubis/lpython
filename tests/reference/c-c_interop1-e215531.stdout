([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         f: 
            ([1m[35mFunction[39m[0m 
               ([33mSymbolTable[39m 
                  2 
                  {
                     _lpython_return_variable: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           _lpython_return_variable [1m[32m
                           ReturnVar[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     x: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           x [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.)
                  }) 
               f [
               ([1m[35mVar[39m[0m 2 [33mx[39m)] [] 
               ([1m[35mVar[39m[0m 2 [33m_lpython_return_variable[39m) [1m[32m
               BindC[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Interface[39m[0m ()), 
         g: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  3 
                  {
                     a: 
                        ([1m[35mVariable[39m[0m 
                           3 
                           a [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     b: 
                        ([1m[35mVariable[39m[0m 
                           3 
                           b [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 4 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     c: 
                        ([1m[35mVariable[39m[0m 
                           3 
                           c [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     d: 
                        ([1m[35mVariable[39m[0m 
                           3 
                           d [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.)
                  }) 
               g [
               ([1m[35mVar[39m[0m 3 [33ma[39m) 
               ([1m[35mVar[39m[0m 3 [33mb[39m) 
               ([1m[35mVar[39m[0m 3 [33mc[39m) 
               ([1m[35mVar[39m[0m 3 [33md[39m)] [] [1m[32m
               BindC[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Interface[39m[0m () .false. .false.), 
         h: 
            ([1m[35mFunction[39m[0m 
               ([33mSymbolTable[39m 
                  4 
                  {
                     _lpython_return_variable: 
                        ([1m[35mVariable[39m[0m 
                           4 
                           _lpython_return_variable [1m[32m
                           ReturnVar[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     x: 
                        ([1m[35mVariable[39m[0m 
                           4 
                           x [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.)
                  }) 
               h [
               ([1m[35mVar[39m[0m 4 [33mx[39m)] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 4 [33m_lpython_return_variable[39m) 
                  ([1m[35mRealBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 4 [33mx[39m) [1m[32m
                     Add[39m[0m 
                     ([1m[35mRealConstant[39m[0m   1.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mReal[39m[0m 8 []) ()) ()) 
               ([1m[35mReturn[39m[0m)] 
               ([1m[35mVar[39m[0m 4 [33m_lpython_return_variable[39m) [1m[32m
               BindC[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m ()), 
         l: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  5 
                  {
                     a: 
                        ([1m[35mVariable[39m[0m 
                           5 
                           a [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     b: 
                        ([1m[35mVariable[39m[0m 
                           5 
                           b [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 4 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     c: 
                        ([1m[35mVariable[39m[0m 
                           5 
                           c [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 8 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.), 
                     d: 
                        ([1m[35mVariable[39m[0m 
                           5 
                           d [1m[32m
                           In[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           BindC[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .true.)
                  }) 
               l [
               ([1m[35mVar[39m[0m 5 [33ma[39m) 
               ([1m[35mVar[39m[0m 5 [33mb[39m) 
               ([1m[35mVar[39m[0m 5 [33mc[39m) 
               ([1m[35mVar[39m[0m 5 [33md[39m)] [
               ([1m[35mPrint[39m[0m () [
                  ([1m[35mStringConstant[39m[0m "OK" 
                     ([1m[35mCharacter[39m[0m 1 2 () []))] () ())] [1m[32m
               BindC[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.), 
         main0: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  6 
                  {
                     i: 
                        ([1m[35mVariable[39m[0m 
                           6 
                           i [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     x: 
                        ([1m[35mVariable[39m[0m 
                           6 
                           x [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     y: 
                        ([1m[35mVariable[39m[0m 
                           6 
                           y [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     z: 
                        ([1m[35mVariable[39m[0m 
                           6 
                           z [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 8 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     zz: 
                        ([1m[35mVariable[39m[0m 
                           6 
                           zz [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               main0 [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33mx[39m) 
                  ([1m[35mRealConstant[39m[0m   5.00000000000000000e+00 
                     ([1m[35mReal[39m[0m 8 [])) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33mi[39m) 
                  ([1m[35mFunctionCall[39m[0m 1 [33mf[39m () [
                     (
                        ([1m[35mVar[39m[0m 6 [33mx[39m))] 
                     ([1m[35mReal[39m[0m 8 []) () ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33my[39m) 
                  ([1m[35mCast[39m[0m 
                     ([1m[35mRealConstant[39m[0m   5.40000000000000036e+00 
                        ([1m[35mReal[39m[0m 8 [])) [1m[32m
                     RealToReal[39m[0m 
                     ([1m[35mReal[39m[0m 4 []) 
                     ([1m[35mRealConstant[39m[0m   5.40000000000000036e+00 
                        ([1m[35mReal[39m[0m 4 []))) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33mz[39m) 
                  ([1m[35mCast[39m[0m ([1m[35mIntegerConstant[39m[0m [36m3[39m 
                     ([1m[35mInteger[39m[0m 4 [])) [1m[32m
                     IntegerToInteger[39m[0m 
                     ([1m[35mInteger[39m[0m 8 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33mzz[39m) ([1m[35mIntegerConstant[39m[0m [36m2[39m 
                  ([1m[35mInteger[39m[0m 4 [])) ()) 
               ([1m[35mSubroutineCall[39m[0m 1 [33mg[39m () [
                  (
                     ([1m[35mVar[39m[0m 6 [33mx[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33my[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33mz[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33mzz[39m))] ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 6 [33mi[39m) 
                  ([1m[35mFunctionCall[39m[0m 1 [33mh[39m () [
                     (
                        ([1m[35mVar[39m[0m 6 [33mx[39m))] 
                     ([1m[35mReal[39m[0m 8 []) () ()) ()) 
               ([1m[35mSubroutineCall[39m[0m 1 [33ml[39m () [
                  (
                     ([1m[35mVar[39m[0m 6 [33mx[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33my[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33mz[39m)) 
                  (
                     ([1m[35mVar[39m[0m 6 [33mzz[39m))] ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.)
      }) 
   [])
#include <inttypes.h>

#include <stdlib.h>
#include <stdbool.h>
#include <stdio.h>
#include <lfortran_intrinsics.h>

#define ASSERT(cond)                                                           \
    {                                                                          \
        if (!(cond)) {                                                         \
            printf("%s%s", "ASSERT failed: ", __FILE__);                       \
            printf("%s%s", "\nfunction ", __func__);                           \
            printf("%s%d%s", "(), line number ", __LINE__, " at \n");          \
            printf("%s%s", #cond, "\n");                                       \
            exit(1);                                                           \
        }                                                                      \
    }
#define ASSERT_MSG(cond, msg)                                                  \
    {                                                                          \
        if (!(cond)) {                                                         \
            printf("%s%s", "ASSERT failed: ", __FILE__);                       \
            printf("%s%s", "\nfunction ", __func__);                           \
            printf("%s%d%s", "(), line number ", __LINE__, " at \n");          \
            printf("%s%s", #cond, "\n");                                       \
            printf("%s", "ERROR MESSAGE:\n");                                  \
            printf("%s%s", msg, "\n");                                         \
            exit(1);                                                           \
        }                                                                      \
    }

// Forward declarations
double f(double x);
void g(double a, float b, int64_t c, int32_t d);
double h(double x);
void l(double a, float b, int64_t c, int32_t d);
void main0();

// Implementations
double h(double x)
{
    double _lpython_return_variable;
    _lpython_return_variable = x +   1.00000000000000000e+00;
    return _lpython_return_variable;
}

void l(double a, float b, int64_t c, int32_t d)
{
    printf("%s\n", "OK");
}

void main0()
{
    double i;
    double x;
    float y;
    int64_t z;
    int32_t zz;
    x =   5.00000000000000000e+00;
    i = f(x);
    y =   5.40000000000000036e+00;
    z = 3;
    zz = 2;
    g(x, y, z, zz);
    i = h(x);
    l(x, y, z, zz);
}

int main(int argc, char* argv[])
{
    return 0;
}
