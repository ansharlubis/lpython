([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         test_float: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  2 
                  {
                     b: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           b [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mLogical[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     f: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           f [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mReal[39m[0m 8 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     i: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           i [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               test_float [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mi[39m) ([1m[35mIntegerConstant[39m[0m [36m34[39m 
                  ([1m[35mInteger[39m[0m 4 [])) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mRealConstant[39m[0m   0.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   0.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m ([1m[35mIntegerConstant[39m[0m [36m34[39m 
                        ([1m[35mInteger[39m[0m 4 [])) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m   3.40000000000000000e+01 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   3.40000000000000000e+01 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mi[39m) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) ()) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   3.40000000000000000e+01 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mi[39m) 
                  ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m4235[39m 
                     ([1m[35mInteger[39m[0m 4 [])) 
                     ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-4235[39m 
                     ([1m[35mInteger[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m4235[39m 
                           ([1m[35mInteger[39m[0m 4 [])) 
                           ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-4235[39m 
                           ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m  -4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealUnaryMinus[39m[0m 
                        ([1m[35mRealConstant[39m[0m   4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 [])) 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m  -4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 []))) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m ([1m[35mIntegerConstant[39m[0m [36m34[39m 
                        ([1m[35mInteger[39m[0m 4 [])) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m   3.40000000000000000e+01 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   3.40000000000000000e+01 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mIntegerUnaryMinus[39m[0m ([1m[35mIntegerConstant[39m[0m [36m4235[39m 
                           ([1m[35mInteger[39m[0m 4 [])) 
                           ([1m[35mInteger[39m[0m 4 []) ([1m[35mIntegerConstant[39m[0m [36m-4235[39m 
                           ([1m[35mInteger[39m[0m 4 []))) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m  -4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealUnaryMinus[39m[0m 
                        ([1m[35mRealConstant[39m[0m   4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 [])) 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m  -4.23500000000000000e+03 
                           ([1m[35mReal[39m[0m 8 []))) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .true. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m   1.00000000000000000e+00 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   1.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mLogicalConstant[39m[0m .false. 
                           ([1m[35mLogical[39m[0m 4 [])) [1m[32m
                        LogicalToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) 
                        ([1m[35mRealConstant[39m[0m   0.00000000000000000e+00 
                           ([1m[35mReal[39m[0m 8 []))) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   0.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 []))) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mb[39m) 
                  ([1m[35mLogicalConstant[39m[0m .true. 
                     ([1m[35mLogical[39m[0m 4 [])) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mf[39m) 
                  ([1m[35mCast[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mb[39m) [1m[32m
                     LogicalToReal[39m[0m 
                     ([1m[35mReal[39m[0m 8 []) ()) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mf[39m) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   1.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mb[39m) 
                  ([1m[35mLogicalConstant[39m[0m .false. 
                     ([1m[35mLogical[39m[0m 4 [])) ()) 
               ([1m[35mAssert[39m[0m 
                  ([1m[35mRealCompare[39m[0m 
                     ([1m[35mCast[39m[0m 
                        ([1m[35mCast[39m[0m 
                           ([1m[35mVar[39m[0m 2 [33mb[39m) [1m[32m
                           LogicalToInteger[39m[0m 
                           ([1m[35mInteger[39m[0m 4 []) ()) [1m[32m
                        IntegerToReal[39m[0m 
                        ([1m[35mReal[39m[0m 8 []) ()) [1m[32m
                     Eq[39m[0m 
                     ([1m[35mRealConstant[39m[0m   0.00000000000000000e+00 
                        ([1m[35mReal[39m[0m 8 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.)
      }) 
   [
   ([1m[35mSubroutineCall[39m[0m 1 [33mtest_float[39m () [] ())])
(TranslationUnit (SymbolTable 1 {_lpython_main_program: (Subroutine (SymbolTable 4 {}) _lpython_main_program [] [(SubroutineCall 1 test_float () [] ())] Source Public Implementation () .false. .false.), main_program: (Program (SymbolTable 3 {}) main_program [] [(SubroutineCall 1 _lpython_main_program () [] ())]), test_float: (Subroutine (SymbolTable 2 {b: (Variable 2 b Local () () Default (Logical 4 []) Source Public Required .false.), f: (Variable 2 f Local () () Default (Real 8 []) Source Public Required .false.), i: (Variable 2 i Local () () Default (Integer 4 []) Source Public Required .false.)}) test_float [] [(= (Var 2 i) (IntegerConstant 34 (Integer 4 [])) ()) (Assert (RealCompare (RealConstant   0.00000000000000000e+00 (Real 8 [])) Eq (RealConstant   0.00000000000000000e+00 (Real 8 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (IntegerConstant 34 (Integer 4 [])) IntegerToReal (Real 8 []) (RealConstant   3.40000000000000000e+01 (Real 8 []))) Eq (RealConstant   3.40000000000000000e+01 (Real 8 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (Var 2 i) IntegerToReal (Real 8 []) ()) Eq (RealConstant   3.40000000000000000e+01 (Real 8 [])) (Logical 4 []) ()) ()) (= (Var 2 i) (IntegerUnaryMinus (IntegerConstant 4235 (Integer 4 [])) (Integer 4 []) (IntegerConstant -4235 (Integer 4 []))) ()) (Assert (RealCompare (Cast (IntegerUnaryMinus (IntegerConstant 4235 (Integer 4 [])) (Integer 4 []) (IntegerConstant -4235 (Integer 4 []))) IntegerToReal (Real 8 []) (RealConstant  -4.23500000000000000e+03 (Real 8 []))) Eq (RealUnaryMinus (RealConstant   4.23500000000000000e+03 (Real 8 [])) (Real 8 []) (RealConstant  -4.23500000000000000e+03 (Real 8 []))) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (IntegerConstant 34 (Integer 4 [])) IntegerToReal (Real 8 []) (RealConstant   3.40000000000000000e+01 (Real 8 []))) Eq (RealConstant   3.40000000000000000e+01 (Real 8 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (IntegerUnaryMinus (IntegerConstant 4235 (Integer 4 [])) (Integer 4 []) (IntegerConstant -4235 (Integer 4 []))) IntegerToReal (Real 8 []) (RealConstant  -4.23500000000000000e+03 (Real 8 []))) Eq (RealUnaryMinus (RealConstant   4.23500000000000000e+03 (Real 8 [])) (Real 8 []) (RealConstant  -4.23500000000000000e+03 (Real 8 []))) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (LogicalConstant .true. (Logical 4 [])) LogicalToReal (Real 8 []) (RealConstant   1.00000000000000000e+00 (Real 8 []))) Eq (RealConstant   1.00000000000000000e+00 (Real 8 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (Assert (RealCompare (Cast (LogicalConstant .false. (Logical 4 [])) LogicalToReal (Real 8 []) (RealConstant   0.00000000000000000e+00 (Real 8 []))) Eq (RealConstant   0.00000000000000000e+00 (Real 8 [])) (Logical 4 []) (LogicalConstant .true. (Logical 4 []))) ()) (= (Var 2 b) (LogicalConstant .true. (Logical 4 [])) ()) (= (Var 2 f) (Cast (Var 2 b) LogicalToReal (Real 8 []) ()) ()) (Assert (RealCompare (Var 2 f) Eq (RealConstant   1.00000000000000000e+00 (Real 8 [])) (Logical 4 []) ()) ()) (= (Var 2 b) (LogicalConstant .false. (Logical 4 [])) ()) (Assert (RealCompare (Cast (Cast (Var 2 b) LogicalToInteger (Integer 4 []) ()) IntegerToReal (Real 8 []) ()) Eq (RealConstant   0.00000000000000000e+00 (Real 8 [])) (Logical 4 []) ()) ())] Source Public Implementation () .false. .false.)}) [])
