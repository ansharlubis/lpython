([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         test_boolOp: 
            ([1m[35mSubroutine[39m[0m 
               ([33mSymbolTable[39m 
                  2 
                  {
                     a: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           a [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mLogical[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.), 
                     b: 
                        ([1m[35mVariable[39m[0m 
                           2 
                           b [1m[32m
                           Local[39m[0m () () [1m[32m
                           Default[39m[0m 
                           ([1m[35mLogical[39m[0m 4 []) [1m[32m
                           Source[39m[0m [1m[32m
                           Public[39m[0m [1m[32m
                           Required[39m[0m .false.)
                  }) 
               test_boolOp [] [
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalConstant[39m[0m .false. 
                     ([1m[35mLogical[39m[0m 4 [])) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mb[39m) 
                  ([1m[35mLogicalConstant[39m[0m .true. 
                     ([1m[35mLogical[39m[0m 4 [])) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     And[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mb[39m) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33mb[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     Or[39m[0m 
                     ([1m[35mLogicalConstant[39m[0m .true. 
                        ([1m[35mLogical[39m[0m 4 [])) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     Or[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mb[39m) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     And[39m[0m 
                     ([1m[35mLogicalCompare[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mb[39m) [1m[32m
                        Eq[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mb[39m) 
                        ([1m[35mLogical[39m[0m 4 []) ()) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33ma[39m) [1m[32m
                     And[39m[0m 
                     ([1m[35mLogicalCompare[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mb[39m) [1m[32m
                        NotEq[39m[0m 
                        ([1m[35mVar[39m[0m 2 [33mb[39m) 
                        ([1m[35mLogical[39m[0m 4 []) ()) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ()) 
               ([1m[35m=[39m[0m 
                  ([1m[35mVar[39m[0m 2 [33ma[39m) 
                  ([1m[35mLogicalBinOp[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mb[39m) [1m[32m
                     Or[39m[0m 
                     ([1m[35mVar[39m[0m 2 [33mb[39m) 
                     ([1m[35mLogical[39m[0m 4 []) ()) ())] [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Implementation[39m[0m () .false. .false.)
      }) 
   [])
(TranslationUnit (SymbolTable 1 {main_program: (Program (SymbolTable 3 {}) main_program [] []), test_boolOp: (Subroutine (SymbolTable 2 {a: (Variable 2 a Local () () Default (Logical 4 []) Source Public Required .false.), b: (Variable 2 b Local () () Default (Logical 4 []) Source Public Required .false.)}) test_boolOp [] [(= (Var 2 a) (LogicalConstant .false. (Logical 4 [])) ()) (= (Var 2 b) (LogicalConstant .true. (Logical 4 [])) ()) (= (Var 2 a) (LogicalBinOp (Var 2 a) And (Var 2 b) (Logical 4 []) ()) ()) (= (Var 2 b) (LogicalBinOp (Var 2 a) Or (LogicalConstant .true. (Logical 4 [])) (Logical 4 []) ()) ()) (= (Var 2 a) (LogicalBinOp (Var 2 a) Or (Var 2 b) (Logical 4 []) ()) ()) (= (Var 2 a) (LogicalBinOp (Var 2 a) And (LogicalCompare (Var 2 b) Eq (Var 2 b) (Logical 4 []) ()) (Logical 4 []) ()) ()) (= (Var 2 a) (LogicalBinOp (Var 2 a) And (LogicalCompare (Var 2 b) NotEq (Var 2 b) (Logical 4 []) ()) (Logical 4 []) ()) ()) (= (Var 2 a) (LogicalBinOp (Var 2 b) Or (Var 2 b) (Logical 4 []) ()) ())] Source Public Implementation () .false. .false.)}) [])
