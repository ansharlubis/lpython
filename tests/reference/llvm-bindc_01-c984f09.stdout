([1m[35mTranslationUnit[39m[0m 
   ([33mSymbolTable[39m 
      1 
      {
         queries: 
            ([1m[35mVariable[39m[0m 
               1 
               queries [1m[32m
               Local[39m[0m () () [1m[32m
               Default[39m[0m 
               ([1m[35mCPtr[39m[0m) [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Required[39m[0m .false.), 
         x: 
            ([1m[35mVariable[39m[0m 
               1 
               x [1m[32m
               Local[39m[0m () () [1m[32m
               Default[39m[0m 
               ([1m[35mPointer[39m[0m 
                  ([1m[35mInteger[39m[0m 2 [])) [1m[32m
               Source[39m[0m [1m[32m
               Public[39m[0m [1m[32m
               Required[39m[0m .false.)
      }) 
   [
   ([1m[35mCPtrToPointer[39m[0m 
      ([1m[35mVar[39m[0m 1 [33mqueries[39m) 
      ([1m[35mVar[39m[0m 1 [33mx[39m) ()) 
   ([1m[35mPrint[39m[0m () [
      ([1m[35mVar[39m[0m 1 [33mqueries[39m) 
      ([1m[35mVar[39m[0m 1 [33mx[39m)] () ())])
; ModuleID = 'LFortran'
source_filename = "LFortran"

@queries = global void* null
@x = global i16* null
@0 = private unnamed_addr constant [2 x i8] c" \00", align 1
@1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@2 = private unnamed_addr constant [13 x i8] c"%lld%s%lld%s\00", align 1

define void @_lpython_main_program() {
.entry:
  %0 = load void*, void** @queries, align 8
  %1 = bitcast void* %0 to i16*
  store i16* %1, i16** @x, align 8
  %2 = load void*, void** @queries, align 8
  %3 = ptrtoint void* %2 to i64
  %4 = load i16*, i16** @x, align 8
  %5 = ptrtoint i16* %4 to i64
  call void (i8*, ...) @_lfortran_printf(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @2, i32 0, i32 0), i64 %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @0, i32 0, i32 0), i64 %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0))
  br label %return

return:                                           ; preds = %.entry
  ret void
}

declare void @_lfortran_printf(i8*, ...)

define i32 @main() {
.entry:
  call void @_lpython_main_program()
  ret i32 0
}
